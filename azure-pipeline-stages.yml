
trigger: none
 
pool: 
   name: default
   demands:
    - agent.name -equals LAPTOP-5LDNLO73
 
# Don't run against PRs
pr: none
 
stages :
  - stage: validate
    jobs:
    - job: validate
      continueOnError: false
      steps:
      - task: TerraformCLI@0
        inputs:
          command: 'init'
          backendType: 'azurerm'
          backendServiceArm: 'Azure-FreeTier-Jcontti'
          backendAzureRmResourceGroupName: 'tstate-rg'
          backendAzureRmStorageAccountName: 'tstatefortest01'
          backendAzureRmContainerName: 'tstate'
          backendAzureRmKey: 'terraform.tfstate'
          allowTelemetryCollection: false
        displayName: 'Terraform INIT'
      - task: TerraformTaskV1@0
        displayName: 'validate'
        inputs:
          provider: 'azurerm'
          command: 'validate'
           
  - stage: plan
    dependsOn: [validate]
    condition: succeeded('validate')
    jobs:
      - job: terraform_plan
        steps:
              - checkout: self
              - task: TerraformCLI@0
                inputs:
                  command: 'init'
                  backendType: 'azurerm'
                  backendServiceArm: 'Azure-FreeTier-Jcontti'
                  backendAzureRmResourceGroupName: 'tstate-rg'
                  backendAzureRmStorageAccountName: 'tstatefortest01'
                  backendAzureRmContainerName: 'tstate'
                  backendAzureRmKey: 'terraform.tfstate'
                  allowTelemetryCollection: false
                displayName: 'Terraform INIT'
              - task: AzureKeyVault@2
                inputs:
                  azureSubscription: 'Azure-FreeTier-Jcontti'
                  KeyVaultName: 'terraform-aks-kv'
                  SecretsFilter: '*'
                  RunAsPreJob: false
                displayName: 'Retrieve secrets from Key Vault'
              - task: TerraformCLI@0
                inputs:
                  command: 'plan'
                  commandOptions: '-var serviceprinciple_id=$(service-principal-kv) -var serviceprinciple_key="$(service-principal-secret-kv)" -var tenant_id=$(free-tentant-kv) -var subscription_id=$(free-subscription-kv) -var ssh_key="$(ssh-key-kv)"'
                  allowTelemetryCollection: false
                displayName: 'Terraform PLAN'
 
  - stage: apply
    dependsOn: [plan]
    condition: succeeded('plan')
    jobs:
      - job: terraform_apply
        steps:
              - checkout: self
              - task: TerraformCLI@0
                inputs:
                  command: 'init'
                  backendType: 'azurerm'
                  backendServiceArm: 'Azure-FreeTier-Jcontti'
                  backendAzureRmResourceGroupName: 'tstate-rg'
                  backendAzureRmStorageAccountName: 'tstatefortest01'
                  backendAzureRmContainerName: 'tstate'
                  backendAzureRmKey: 'terraform.tfstate'
                  allowTelemetryCollection: false
                displayName: 'Terraform INIT'
              - task: AzureKeyVault@2
                inputs:
                  azureSubscription: 'Azure-FreeTier-Jcontti'
                  KeyVaultName: 'terraform-aks-kv'
                  SecretsFilter: '*'
                  RunAsPreJob: false
                displayName: 'Retrieve secrets from Key Vault'
              - task: TerraformCLI@0
                inputs:
                  command: 'plan'
                  commandOptions: '-var serviceprinciple_id=$(service-principal-kv) -var serviceprinciple_key="$(service-principal-secret-kv)" -var tenant_id=$(free-tentant-kv) -var subscription_id=$(free-subscription-kv) -var ssh_key="$(ssh-key-kv)"'
                  allowTelemetryCollection: false
                displayName: 'Terraform PLAN'
              - task: TerraformCLI@0
                inputs:
                  command: 'apply'
                  commandOptions: '-var serviceprinciple_id=$(service-principal-kv) -var serviceprinciple_key="$(service-principal-secret-kv)" -var tenant_id=$(free-tentant-kv) -var subscription_id=$(free-subscription-kv) -var ssh_key="$(ssh-key-kv)"'
                  allowTelemetryCollection: true
                displayName: 'Terraform APPLY'
